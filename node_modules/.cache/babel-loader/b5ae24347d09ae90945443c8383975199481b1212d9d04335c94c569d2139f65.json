{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAILURE } from '../reducers/actionTypes';\nexport const fetchDataRequest = () => ({\n  type: FETCH_DATA_REQUEST\n});\nexport const fetchDataSuccess = data => ({\n  type: FETCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchDataFailure = error => ({\n  type: FETCH_DATA_FAILURE,\n  payload: error\n});\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(fetchDataRequest());\n    axios.get('https://dummyjson.com/todos').then(response => {\n      const data = response.data;\n      dispatch(fetchDataSuccess(data));\n    }).catch(error => {\n      dispatch(fetchDataFailure(error.message));\n    });\n  };\n};\nexport const deleteProduct = productId => {\n  console.log(\"deletion\");\n  return async dispatch => {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    try {\n      let deltedproduct = await axios.delete(`https://dummyjson.com/todos/${productId}`);\n      console.log(deltedproduct);\n      dispatch({\n        type: DELETE_PRODUCT_SUCCESS,\n        payload: productId\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_PRODUCT_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const editProduct = (id, updatedProduct) => async dispatch => {\n  const response = await fetch(`/api/products/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedProduct)\n  });\n  const product = await response.json();\n  dispatch({\n    type: EDIT_PRODUCT,\n    payload: product\n  });\n};","map":{"version":3,"names":["axios","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILURE","fetchDataRequest","type","fetchDataSuccess","data","payload","fetchDataFailure","error","fetchData","dispatch","get","then","response","catch","message","deleteProduct","productId","console","log","deltedproduct","delete","editProduct","id","updatedProduct","fetch","method","headers","body","JSON","stringify","product","json","EDIT_PRODUCT"],"sources":["/home/user/Videos/Taskfor job/Todo/todolist/src/reducers/actions.js"],"sourcesContent":["import axios from 'axios';\nimport { FETCH_DATA_REQUEST,\n     FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE,DELETE_PRODUCT_REQUEST,DELETE_PRODUCT_SUCCESS,DELETE_PRODUCT_FAILURE\n     } from '../reducers/actionTypes';\n\nexport const fetchDataRequest = () => ({\n    type: FETCH_DATA_REQUEST,\n});\n\nexport const fetchDataSuccess = (data) => ({\n    type: FETCH_DATA_SUCCESS,\n    payload: data,\n});\n\nexport const fetchDataFailure = (error) => ({\n    type: FETCH_DATA_FAILURE,\n    payload: error,\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        dispatch(fetchDataRequest());\n        axios.get('https://dummyjson.com/todos')\n            .then(response => {\n                const data = response.data;\n                dispatch(fetchDataSuccess(data));\n            })\n            .catch(error => {\n                dispatch(fetchDataFailure(error.message));\n            });\n    };\n};\nexport const deleteProduct = (productId) => {\n    console.log(\"deletion\")\n    return async (dispatch) => {\n      dispatch({ type: DELETE_PRODUCT_REQUEST });\n      try {\n        let deltedproduct = await axios.delete(`https://dummyjson.com/todos/${productId}`);\n        console.log(deltedproduct);\n        dispatch({ type: DELETE_PRODUCT_SUCCESS, payload: productId });\n      } catch (error) {\n        dispatch({ type: DELETE_PRODUCT_FAILURE, payload: error.message });\n      }\n    };\n  };\n  export const editProduct = (id, updatedProduct) => async dispatch => {\n    const response = await fetch(`/api/products/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedProduct),\n    });\n    \n    const product = await response.json();\n    \n    dispatch({ type: EDIT_PRODUCT, payload: product });\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EACtBC,kBAAkB,EAAEC,kBAAkB,EAACC,sBAAsB,EAACC,sBAAsB,EAACC,sBAAsB,QACpG,yBAAyB;AAErC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,MAAO;EACnCC,IAAI,EAAEP;AACV,CAAC,CAAC;AAEF,OAAO,MAAMQ,gBAAgB,GAAIC,IAAI,KAAM;EACvCF,IAAI,EAAEN,kBAAkB;EACxBS,OAAO,EAAED;AACb,CAAC,CAAC;AAEF,OAAO,MAAME,gBAAgB,GAAIC,KAAK,KAAM;EACxCL,IAAI,EAAEL,kBAAkB;EACxBQ,OAAO,EAAEE;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAQC,QAAQ,IAAK;IACjBA,QAAQ,CAACR,gBAAgB,CAAC,CAAC,CAAC;IAC5BP,KAAK,CAACgB,GAAG,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAI;MACd,MAAMR,IAAI,GAAGQ,QAAQ,CAACR,IAAI;MAC1BK,QAAQ,CAACN,gBAAgB,CAACC,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,CACDS,KAAK,CAACN,KAAK,IAAI;MACZE,QAAQ,CAACH,gBAAgB,CAACC,KAAK,CAACO,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AACD,OAAO,MAAMC,aAAa,GAAIC,SAAS,IAAK;EACxCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,OAAO,MAAOT,QAAQ,IAAK;IACzBA,QAAQ,CAAC;MAAEP,IAAI,EAAEJ;IAAuB,CAAC,CAAC;IAC1C,IAAI;MACF,IAAIqB,aAAa,GAAG,MAAMzB,KAAK,CAAC0B,MAAM,CAAC,+BAA+BJ,SAAS,EAAE,CAAC;MAClFC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;MAC1BV,QAAQ,CAAC;QAAEP,IAAI,EAAEH,sBAAsB;QAAEM,OAAO,EAAEW;MAAU,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdE,QAAQ,CAAC;QAAEP,IAAI,EAAEF,sBAAsB;QAAEK,OAAO,EAAEE,KAAK,CAACO;MAAQ,CAAC,CAAC;IACpE;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMO,WAAW,GAAGA,CAACC,EAAE,EAAEC,cAAc,KAAK,MAAMd,QAAQ,IAAI;EACnE,MAAMG,QAAQ,GAAG,MAAMY,KAAK,CAAC,iBAAiBF,EAAE,EAAE,EAAE;IAClDG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,cAAc;EACrC,CAAC,CAAC;EAEF,MAAMO,OAAO,GAAG,MAAMlB,QAAQ,CAACmB,IAAI,CAAC,CAAC;EAErCtB,QAAQ,CAAC;IAAEP,IAAI,EAAE8B,YAAY;IAAE3B,OAAO,EAAEyB;EAAQ,CAAC,CAAC;AACpD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}