{"ast":null,"code":"var _jsxFileName = \"/home/user/Videos/Taskfor job/Todo/todolist/src/components/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import {connect} from 'react-redux';\nimport './todo.css';\nimport { putData, postData } from '../api';\nimport TodoList from './TodoList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { editProduct, fetchData } from '../reducers/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todo(props) {\n  _s();\n  console.log(props);\n  const dispatch = useDispatch();\n  const dataState = useSelector(state => state.todoReducer);\n  console.log(dataState);\n  const [edit, setEdit] = useState(false);\n  // const [products, setProducts] = useState([]);\n  const [intialState, setInitialstate] = useState({\n    todo: \"\",\n    completed: false,\n    userId: ''\n  });\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n  if (dataState.loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  if (dataState.error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: dataState.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  async function addProduct(intialState) {\n    console.log(intialState);\n    if (edit) {\n      dispatch(editProduct(intialState.id, {\n        intialState\n      }));\n    } else {\n      let postres = await postData({\n        ...intialState,\n        userId: Math.ceil(Math.random(20, 80) * 100)\n      });\n      console.log(postres);\n    }\n  }\n  function editProduct(todo) {\n    setEdit(true);\n    setInitialstate(todo);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todolist2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"todo\",\n      value: intialState.todo,\n      onChange: e => setInitialstate({\n        ...intialState,\n        [e.target.name]: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addProduct(intialState),\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      data: dataState.data,\n      editProduct: editProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Todo, \"KullYBiB+TObSHglhsdco3DPwKg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","putData","postData","TodoList","useSelector","useDispatch","editProduct","fetchData","jsxDEV","_jsxDEV","Todo","props","_s","console","log","dispatch","dataState","state","todoReducer","edit","setEdit","intialState","setInitialstate","todo","completed","userId","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","error","addProduct","id","postres","Math","ceil","random","type","name","value","onChange","e","target","onClick","data","_c","$RefreshReg$"],"sources":["/home/user/Videos/Taskfor job/Todo/todolist/src/components/Todo.jsx"],"sourcesContent":["import React, { useState , useEffect} from 'react'\n// import {connect} from 'react-redux';\nimport './todo.css';\nimport {  putData, postData } from '../api';\nimport TodoList from './TodoList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { editProduct, fetchData } from '../reducers/actions'\n\n\n\nfunction Todo(props) {\n    console.log(props);\n    \n    const dispatch = useDispatch();\n    const dataState = useSelector(state => state.todoReducer);\n    console.log(dataState);\n    const [edit,setEdit]= useState(false);\n    // const [products, setProducts] = useState([]);\n    const [intialState, setInitialstate]= useState({\n        todo: \"\",\n        completed: false,\n        userId: ''\n    })\n    useEffect(() => {\n        dispatch(fetchData());\n    }, [ dispatch]);\n\n    if (dataState.loading) {\n        return <h2>Loading...</h2>;\n    }\n\n    if (dataState.error) {\n        return <h2>{dataState.error}</h2>;\n    }\n   \n    async function addProduct(intialState) {\n        console.log(intialState);\n\n        if (edit){\n            dispatch(editProduct(intialState.id, {intialState}));\n\n        }\n        else{\n         let postres = await postData({...intialState,userId:(Math.ceil(Math.random(20,80)*100))});\n         console.log(postres);\n           \n        }\n\n\n    }\n    function editProduct(todo) {\n        setEdit(true);\n   setInitialstate(todo)\n    }\n\n  return (\n    <div>\n        <h1>Todolist2</h1>\n        <input type='text' name='todo' value={intialState.todo} onChange={(e)=> setInitialstate({...intialState,[e.target.name]:e.target.value})}/>\n        <button onClick={()=>addProduct(intialState)} >Add todo</button>\n        <TodoList data={dataState.data} editProduct={editProduct}/>\n    </div>\n  )\n}\n\n\nexport default Todo"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}