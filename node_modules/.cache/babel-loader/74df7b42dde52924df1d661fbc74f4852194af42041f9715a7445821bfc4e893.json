{"ast":null,"code":"// import axios from 'axios';\n// import {EDIT_PRODUCT_REQUEST,EDIT_PRODUCT_SUCCESS,EDIT_PRODUCT_FAILURE, FETCH_DATA_REQUEST,\n//      FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE,DELETE_PRODUCT_REQUEST,DELETE_PRODUCT_SUCCESS,DELETE_PRODUCT_FAILURE\n//      } from '../reducers/actionTypes';\n\n// export const fetchDataRequest = () => ({\n//     type: FETCH_DATA_REQUEST,\n// });\n\n// export const fetchDataSuccess = (data) => ({\n//     type: FETCH_DATA_SUCCESS,\n//     payload: data,\n// });\n\n// export const fetchDataFailure = (error) => ({\n//     type: FETCH_DATA_FAILURE,\n//     payload: error,\n// });\n\n// export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(fetchDataRequest());\n//         axios.get('https://dummyjson.com/todos')\n//             .then(response => {\n//                 const data = response.data;\n//                 dispatch(fetchDataSuccess(data));\n//             })\n//             .catch(error => {\n//                 dispatch(fetchDataFailure(error.message));\n//             });\n//     };\n// };\n// export const deleteProduct = (productId) => {\n//     console.log(\"deletion\")\n//     return async (dispatch) => {\n//       dispatch({ type: DELETE_PRODUCT_REQUEST });\n//       try {\n//         let deltedproduct = await axios.delete(`https://dummyjson.com/todos/${productId}`);\n//         console.log(deltedproduct);\n//         dispatch({ type: DELETE_PRODUCT_SUCCESS, payload: productId });\n//       } catch (error) {\n//         dispatch({ type: DELETE_PRODUCT_FAILURE, payload: error.message });\n//       }\n//     };\n//   };\n//   export const editProduct = (productId) => {\n//     console.log(\"edited\")\n//     return async (dispatch) => {\n//       dispatch({ type: EDIT_PRODUCT_REQUEST });\n//       try {\n//         let editedproduct = await axios.put(`https://dummyjson.com/todos/${productId}`);\n//         console.log(editedproduct);\n//         dispatch({ type: EDIT_PRODUCT_SUCCESS, payload: productId });\n//       } catch (error) {\n//         dispatch({ type: EDIT_PRODUCT_FAILURE, payload: error.message });\n//       }\n//     };\n//   };\n// export const editProduct = (id) => async dispatch => {\n//   const response = await fetch(`https://dummyjson.com/todos/${id}`, {\n//     method: 'PUT',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({completed: false}),\n//   });\n\n//   const product = await response.json();\n//   console.log(product);\n\n//   dispatch({ type: EDIT_PRODUCT, payload: product });\n// };\nimport { FETCH_TODOS_REQUEST, FETCH_TODOS_SUCCESS, FETCH_TODOS_FAILURE, EDIT_TODO_REQUEST, EDIT_TODO_SUCCESS, EDIT_TODO_FAILURE } from './actionTypes';\nexport const fetchTodos = () => async dispatch => {\n  dispatch({\n    type: FETCH_TODOS_REQUEST\n  });\n  try {\n    const response = await fetch('/api/todos');\n    const todos = await response.json();\n    dispatch({\n      type: FETCH_TODOS_SUCCESS,\n      payload: todos\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_TODOS_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const editTodo = (id, updatedTodo) => async dispatch => {\n  dispatch({\n    type: EDIT_TODO_REQUEST\n  });\n  try {\n    const response = await fetch(`/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTodo)\n    });\n    const todo = await response.json();\n    dispatch({\n      type: EDIT_TODO_SUCCESS,\n      payload: todo\n    });\n  } catch (error) {\n    dispatch({\n      type: EDIT_TODO_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["FETCH_TODOS_REQUEST","FETCH_TODOS_SUCCESS","FETCH_TODOS_FAILURE","EDIT_TODO_REQUEST","EDIT_TODO_SUCCESS","EDIT_TODO_FAILURE","fetchTodos","dispatch","type","response","fetch","todos","json","payload","error","message","editTodo","id","updatedTodo","method","headers","body","JSON","stringify","todo"],"sources":["/home/user/Videos/Taskfor job/Todo/todolist/src/reducers/actions.js"],"sourcesContent":["// import axios from 'axios';\n// import {EDIT_PRODUCT_REQUEST,EDIT_PRODUCT_SUCCESS,EDIT_PRODUCT_FAILURE, FETCH_DATA_REQUEST,\n//      FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE,DELETE_PRODUCT_REQUEST,DELETE_PRODUCT_SUCCESS,DELETE_PRODUCT_FAILURE\n//      } from '../reducers/actionTypes';\n\n// export const fetchDataRequest = () => ({\n//     type: FETCH_DATA_REQUEST,\n// });\n\n// export const fetchDataSuccess = (data) => ({\n//     type: FETCH_DATA_SUCCESS,\n//     payload: data,\n// });\n\n// export const fetchDataFailure = (error) => ({\n//     type: FETCH_DATA_FAILURE,\n//     payload: error,\n// });\n\n// export const fetchData = () => {\n//     return (dispatch) => {\n//         dispatch(fetchDataRequest());\n//         axios.get('https://dummyjson.com/todos')\n//             .then(response => {\n//                 const data = response.data;\n//                 dispatch(fetchDataSuccess(data));\n//             })\n//             .catch(error => {\n//                 dispatch(fetchDataFailure(error.message));\n//             });\n//     };\n// };\n// export const deleteProduct = (productId) => {\n//     console.log(\"deletion\")\n//     return async (dispatch) => {\n//       dispatch({ type: DELETE_PRODUCT_REQUEST });\n//       try {\n//         let deltedproduct = await axios.delete(`https://dummyjson.com/todos/${productId}`);\n//         console.log(deltedproduct);\n//         dispatch({ type: DELETE_PRODUCT_SUCCESS, payload: productId });\n//       } catch (error) {\n//         dispatch({ type: DELETE_PRODUCT_FAILURE, payload: error.message });\n//       }\n//     };\n//   };\n//   export const editProduct = (productId) => {\n//     console.log(\"edited\")\n//     return async (dispatch) => {\n//       dispatch({ type: EDIT_PRODUCT_REQUEST });\n//       try {\n//         let editedproduct = await axios.put(`https://dummyjson.com/todos/${productId}`);\n//         console.log(editedproduct);\n//         dispatch({ type: EDIT_PRODUCT_SUCCESS, payload: productId });\n//       } catch (error) {\n//         dispatch({ type: EDIT_PRODUCT_FAILURE, payload: error.message });\n//       }\n//     };\n//   };\n  // export const editProduct = (id) => async dispatch => {\n  //   const response = await fetch(`https://dummyjson.com/todos/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({completed: false}),\n  //   });\n    \n  //   const product = await response.json();\n  //   console.log(product);\n    \n  //   dispatch({ type: EDIT_PRODUCT, payload: product });\n  // };\n  import {\n    FETCH_TODOS_REQUEST,\n    FETCH_TODOS_SUCCESS,\n    FETCH_TODOS_FAILURE,\n    EDIT_TODO_REQUEST,\n    EDIT_TODO_SUCCESS,\n    EDIT_TODO_FAILURE,\n  } from './actionTypes';\n  \n  export const fetchTodos = () => async dispatch => {\n    dispatch({ type: FETCH_TODOS_REQUEST });\n    try {\n      const response = await fetch('/api/todos');\n      const todos = await response.json();\n      dispatch({ type: FETCH_TODOS_SUCCESS, payload: todos });\n    } catch (error) {\n      dispatch({ type: FETCH_TODOS_FAILURE, payload: error.message });\n    }\n  };\n  \n  export const editTodo = (id, updatedTodo) => async dispatch => {\n    dispatch({ type: EDIT_TODO_REQUEST });\n    try {\n      const response = await fetch(`/api/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedTodo),\n      });\n      const todo = await response.json();\n      dispatch({ type: EDIT_TODO_SUCCESS, payload: todo });\n    } catch (error) {\n      dispatch({ type: EDIT_TODO_FAILURE, payload: error.message });\n    }\n  };\n  "],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SACEA,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,QACZ,eAAe;AAEtB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EAChDA,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAoB,CAAC,CAAC;EACvC,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;IAC1C,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACnCL,QAAQ,CAAC;MAAEC,IAAI,EAAEP,mBAAmB;MAAEY,OAAO,EAAEF;IAAM,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAEN,mBAAmB;MAAEW,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,EAAE,EAAEC,WAAW,KAAK,MAAMX,QAAQ,IAAI;EAC7DA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAkB,CAAC,CAAC;EACrC,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAcO,EAAE,EAAE,EAAE;MAC/CE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;IAClC,CAAC,CAAC;IACF,MAAMM,IAAI,GAAG,MAAMf,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,iBAAiB;MAAES,OAAO,EAAEW;IAAK,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAEH,iBAAiB;MAAEQ,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EAC/D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}