{"ast":null,"code":"import axios from 'axios';\nimport { EDIT_PRODUCT_REQUEST, EDIT_PRODUCT_SUCCESS, EDIT_PRODUCT_FAILURE, FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, FETCH_DATA_FAILURE, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAILURE } from '../reducers/actionTypes';\nexport const fetchDataRequest = () => ({\n  type: FETCH_DATA_REQUEST\n});\nexport const fetchDataSuccess = data => ({\n  type: FETCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchDataFailure = error => ({\n  type: FETCH_DATA_FAILURE,\n  payload: error\n});\nexport const fetchData = () => {\n  console.log('fetch');\n  return dispatch => {\n    dispatch(fetchDataRequest());\n    axios.get('https://dummyjson.com/todos').then(response => {\n      const data = response.data;\n      dispatch(fetchDataSuccess(data));\n    }).catch(error => {\n      dispatch(fetchDataFailure(error.message));\n    });\n  };\n};\nexport const deleteProduct = productId => {\n  console.log(\"deletion\");\n  return async dispatch => {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    try {\n      let deltedproduct = await axios.delete(`https://dummyjson.com/todos/${productId}`);\n      console.log(deltedproduct);\n      dispatch({\n        type: DELETE_PRODUCT_SUCCESS,\n        payload: productId\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_PRODUCT_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\n// export const editProduct = (productId, data) => {\n//   console.log(\"edited\", data, typeof productId, productId)\n//   return async (dispatch) => {\n//     dispatch({ type: EDIT_PRODUCT_REQUEST });\n//     try {\n//       let editedproduct = await axios.put(`https://dummyjson.com/todos/${productId}`, data);\n//       console.log(editedproduct);\n//       dispatch({ type: EDIT_PRODUCT_SUCCESS, payload: editProduct.data });\n//     } catch (error) {\n//       dispatch({ type: EDIT_PRODUCT_FAILURE, payload: error.message });\n//     }\n//   };\n// };\nexport const editProduct = (id, updatedTodo) => async dispatch => {\n  dispatch({\n    type: EDIT_PRODUCT_REQUEST\n  });\n  try {\n    const response = await axios.put(`https://dummyjson.com/todos/${id}`, updatedTodo);\n    console.log(response.data, 'responce', updatedTodo);\n    dispatch({\n      type: EDIT_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: EDIT_PRODUCT_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const addProduct = data => {\n  console.log(data);\n  console.log(\"edited\");\n  return async dispatch => {\n    dispatch({\n      type: ADD_PRODUCT_REQUEST\n    });\n    try {\n      let newproduct = await axios.post(`https://dummyjson.com/todos/add`, data);\n      console.log(newproduct);\n      dispatch({\n        type: ADD_PRODUCT_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ADD_PRODUCT_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\n// export const editProduct = (id) => async dispatch => {\n//   const response = await fetch(`https://dummyjson.com/todos/${id}`, {\n//     method: 'PUT',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify({completed: false}),\n//   });\n\n//   const product = await response.json();\n//   console.log(product);\n\n//   dispatch({ type: EDIT_PRODUCT, payload: product });\n// };","map":{"version":3,"names":["axios","EDIT_PRODUCT_REQUEST","EDIT_PRODUCT_SUCCESS","EDIT_PRODUCT_FAILURE","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","FETCH_DATA_FAILURE","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILURE","fetchDataRequest","type","fetchDataSuccess","data","payload","fetchDataFailure","error","fetchData","console","log","dispatch","get","then","response","catch","message","deleteProduct","productId","deltedproduct","delete","editProduct","id","updatedTodo","put","addProduct","newproduct","post"],"sources":["/home/user/Videos/Taskfor job/Todo/todolist/src/reducers/actions.js"],"sourcesContent":["import axios from 'axios';\nimport {EDIT_PRODUCT_REQUEST,EDIT_PRODUCT_SUCCESS,EDIT_PRODUCT_FAILURE, FETCH_DATA_REQUEST,\n     FETCH_DATA_SUCCESS, ADD_PRODUCT_REQUEST,ADD_PRODUCT_SUCCESS,ADD_PRODUCT_FAILURE,\n     FETCH_DATA_FAILURE,DELETE_PRODUCT_REQUEST,DELETE_PRODUCT_SUCCESS,DELETE_PRODUCT_FAILURE\n     } from '../reducers/actionTypes';\n\nexport const fetchDataRequest = () => ({\n    type: FETCH_DATA_REQUEST,\n});\n\nexport const fetchDataSuccess = (data) => ({\n    type: FETCH_DATA_SUCCESS,\n    payload: data,\n});\n\nexport const fetchDataFailure = (error) => ({\n    type: FETCH_DATA_FAILURE,\n    payload: error,\n});\n\nexport const fetchData = () => {\n  console.log('fetch');\n    return (dispatch) => {\n        dispatch(fetchDataRequest());\n        axios.get('https://dummyjson.com/todos')\n            .then(response => {\n                const data = response.data;\n                dispatch(fetchDataSuccess(data));\n            })\n            .catch(error => {\n                dispatch(fetchDataFailure(error.message));\n            });\n    };\n};\nexport const deleteProduct = (productId) => {\n    console.log(\"deletion\")\n    return async (dispatch) => {\n      dispatch({ type: DELETE_PRODUCT_REQUEST });\n      try {\n        let deltedproduct = await axios.delete(`https://dummyjson.com/todos/${productId}`);\n        console.log(deltedproduct);\n        dispatch({ type: DELETE_PRODUCT_SUCCESS, payload: productId });\n      } catch (error) {\n        dispatch({ type: DELETE_PRODUCT_FAILURE, payload: error.message });\n      }\n    };\n  };\n  // export const editProduct = (productId, data) => {\n  //   console.log(\"edited\", data, typeof productId, productId)\n  //   return async (dispatch) => {\n  //     dispatch({ type: EDIT_PRODUCT_REQUEST });\n  //     try {\n  //       let editedproduct = await axios.put(`https://dummyjson.com/todos/${productId}`, data);\n  //       console.log(editedproduct);\n  //       dispatch({ type: EDIT_PRODUCT_SUCCESS, payload: editProduct.data });\n  //     } catch (error) {\n  //       dispatch({ type: EDIT_PRODUCT_FAILURE, payload: error.message });\n  //     }\n  //   };\n  // };\n  export const editProduct = (id, updatedTodo) => async dispatch => {\n    dispatch({ type: EDIT_PRODUCT_REQUEST });\n    try {\n      const response = await axios.put(`https://dummyjson.com/todos/${id}`, updatedTodo);\n     console.log(response.data, 'responce', updatedTodo);\n      dispatch({ type: EDIT_PRODUCT_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({ type: EDIT_PRODUCT_FAILURE, payload: error.message });\n    }\n  };\n  export const addProduct = (data) => {\n    console.log(data);\n    console.log(\"edited\")\n    return async (dispatch) => {\n      dispatch({ type: ADD_PRODUCT_REQUEST });\n      try {\n        let newproduct = await axios.post(`https://dummyjson.com/todos/add`, data);\n        console.log(newproduct);\n        dispatch({ type: ADD_PRODUCT_SUCCESS, payload:data });\n      } catch (error) {\n        dispatch({ type: ADD_PRODUCT_FAILURE, payload: error.message });\n      }\n    };\n  };\n  // export const editProduct = (id) => async dispatch => {\n  //   const response = await fetch(`https://dummyjson.com/todos/${id}`, {\n  //     method: 'PUT',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({completed: false}),\n  //   });\n    \n  //   const product = await response.json();\n  //   console.log(product);\n    \n  //   dispatch({ type: EDIT_PRODUCT, payload: product });\n  // };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}